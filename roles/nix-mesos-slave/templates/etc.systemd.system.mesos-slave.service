[Unit]
Description=mesos-slave
After=zookeeper.service
Requires=zookeeper.service

[Service]
#  the type can be:
#      forking – the startup program will fork a subprocess
#      normal  -- the startup program is a long running service,
#                 so systemd will fork a subprocess for this service
#      oneshot – the service will run and exit
#
Type=normal
#   define environment variables used in startup program
#EnvironmentFile=-/etc/sysconfig/foobar

UMask=0002

Environment=PATH=/home/nix/.nix-profile/bin:/sbin:/usr/sbin:/usr/local/sbin:/root/bin:/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin:/usr/games

#  command line variable ${FOO1} will use /etc/sysconfig/foobar
#    ${FOO1} and ${FOO2} are also visible inside /root/foobar.sh
ExecStart={{ nix_bin }}/mesos-slave \
  --ip={{ mesos_slave_bind_ip | default('127.0.0.1') }} \
  --work_dir={{ mesos_slave_datadir }} \
  --containerizers=docker,mesos \
  --executor_registration_timeout={{ mesos_slave_executor_registration_timeout }} \
  --master={{ mesos_slave_zk_string }} \
  --credential={{mesos_slave_credentials_file}} \
  --hostname={{ inventory_hostname }} \
  --log_dir={{ mesos_slave_logdir }} \
  --no-switch_user \
  --docker={{ nix_bin }}/docker \
  --gc_delay={{ mesos_slave_gc_delay }} \
  --isolation=cgroups/cpu,cgroups/mem \
  --logging_level={{ mesos_slave_logging_level }} \
  --systemd_enable_support=false

User=root
Group=root

RestartSec=20
KillMode=process
Restart=Always

[Install]
WantedBy=multi-user.target
